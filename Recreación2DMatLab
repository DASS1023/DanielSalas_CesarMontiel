% Datos proporcionados (ángulo en grados, distancia en cm)
data = [
    10, 14.61; 15, 14.96; 20, 15.97; 25, 17.98; 30, 19.23;
    35, 17.17; 40, 14.38; 45, 12.54; 50, 9.65; 55, 8.74;
    60, 7.30; 65, 6.98; 70, 6.73; 75, 9.55; 80, 15.41;
    85, 24.31; 90, 30.48; 95, 33.11; 100, 36.08; 105, 39.56;
    110, 41.92; 115, 44.69; 120, 45.52; 125, 46.14; 130, 47.10;
    135, 48.83; 140, 48.87; 145, 49.90; 150, 47.93; 155, 44.20;
    160, 41.15; 165, 39.11; 170, 37.58; 175, 36.69; 180, 36.52;
    0, 36.14; 5, 34.60; 10, 33.70; 15, 34.03; 20, 33.52;
    25, 32.89; 30, 32.42; 35, 31.81; 40, 28.36; 45, 22.02;
    50, 20.01; 55, 18.26; 60, 21.70; 65, 25.77; 70, 29.33;
    75, 32.25; 80, 31.44; 85, 43.33
];

% Extraer ángulos y distancias desde la matriz de datos
angles = data(:, 1); % Columna 1: Ángulos en grados
distances = data(:, 2); % Columna 2: Distancias en cm

% Convertir ángulos de grados a radianes para cálculos trigonométricos
angles_rad = deg2rad(angles); 

% Calcular coordenadas cartesianas (x, y) usando las fórmulas:
% x = distancia * cos(ángulo)
% y = distancia * sin(ángulo)
x = distances .* cos(angles_rad); 
y = distances .* sin(angles_rad);

% Crear una nueva figura para la gráfica
figure; 

% Graficar los puntos individuales en azul con relleno
scatter(x, y, 'filled', 'blue'); 

% Mantener la gráfica actual para superponer otros elementos
hold on; 

% Conectar los puntos con líneas rojas y cerrar la figura uniendo el último con el primero
plot([x; x(1)], [y; y(1)], 'r-', 'LineWidth', 1.5);

% Desactivar la retención de la gráfica
hold off; 

% Añadir etiquetas a los ejes
xlabel('Coordenada X (cm)'); 
ylabel('Coordenada Y (cm)'); 

% Título de la gráfica
title('Reconstrucción de objeto en 2D'); 

% Agregar una leyenda para identificar los elementos
legend('Puntos medidos', 'Reconstrucción'); 

% Activar la cuadrícula para mejor visualización
grid on; 

% Asegurar que la escala de los ejes X e Y sea igual para evitar distorsión
axis equal; 
